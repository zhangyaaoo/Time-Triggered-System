/************************ (C) COPYRIGHT HARRY007 *******************************
 * 文件名   ：Task_Scheduler.h
 * 描述     ：混合式调度器H文件
 * 库版本   ：V2.1.0
 * 作者     ：HARRY007   参考：Michael J. Pont , liubing等人
 * 作者     : ZS
 * 修改时间 ：2016-09-11
*******************************************************************************/

#ifndef __TASK_SCHEDULER_H
#define __TASK_SCHEDULER_H

#include "stm32f10x.h"

#ifndef NULL
    #define     NULL        (void *)0	 //定义空指针
#endif

#ifndef TRUE
    #define     TRUE        (1==1)
#endif

#ifndef FALSE
    #define     FALSE       (0==1)
#endif

#ifndef ON
    #define     ON          1
#endif

#ifndef OFF
    #define     OFF         0
#endif


#define hSCH_MAX_TASKS  7   //最大允许任务数量

typedef void TASK_SCH(void);//回调函数类型定义

typedef struct 
{
    u8  Enable;     //任务使能 
    u8  RunMe;      //就绪标志
    u8  Co_op;      //抢占式任务标志  1：合作    0：抢占
    u32 Delay;      //首次执行等待时间      
    u32 Period;     //调度周期   
    TASK_SCH *pTask;//待执行任务
}sTaskTCB; 

extern sTaskTCB hSCH_tasks_G[hSCH_MAX_TASKS];

/*******************************************************************************
 * 名称: hSCH_Init
 * 功能: 任务初始化
 * 形参: 无
 * 返回: 无
 * 说明: 无 
 ******************************************************************************/
void hSCH_Init(void);

/*******************************************************************************
 * 名称: SCH_Start
 * 功能: 开始任务调度
 * 形参: 无
 * 返回: 无
 * 说明: 无 
 ******************************************************************************/
void SCH_Start(void);

/*******************************************************************************
 * 名称: hSCH_Dispatch_Tasks
 * 功能: 任务调度
 * 形参: 无
 * 返回: 无
 * 说明: 需要放在主函数超级大循环中
 ******************************************************************************/
void hSCH_Dispatch_Tasks(void);

/*******************************************************************************
 * 名称: SCH_Add_Task
 * 功能: 添加任务
 * 形参: 任务函数指针，首次开始执行时间，调度周期，任务类型（合作：1；抢占：0）
 * 返回: 结构体指针sTaskTCB
 * 说明: 无 
 ******************************************************************************/
sTaskTCB *SCH_Add_Task(TASK_SCH *pFunction, u32 DELAY, u32 PERIOD,u8 task_mode,u8 ENABLE);  

/*******************************************************************************
 * 名称: SCH_Delete_Task
 * 功能: 任务删除
 * 形参: 结构体指针sTaskH
 * 返回: 无
 * 说明: 代码没有真的删除，只是不执行这个任务而已，指向空指针
 ******************************************************************************/
void SCH_Delete_Task(sTaskTCB *task);

/*******************************************************************************
 * 名称: SCH_Enable_Task
 * 功能: 使能任务
 * 形参: 结构体指针sTaskH
 * 返回: 无
 * 说明: 无
 ******************************************************************************/
void SCH_Enable_Task(sTaskTCB *task);

/*******************************************************************************
 * 名称: SCH_Disable_Task
 * 功能: 使能任务
 * 形参: 结构体指针sTaskH
 * 返回: 无
 * 说明: 无
 ******************************************************************************/
void SCH_Disable_Task(sTaskTCB *task);


/*******************************************************************************
 * 名称: SCH_Delay_Task
 * 功能: 将任务延时执行N个时间片
 * 形参: 结构体指针sTaskH，延时的时间片个数delaytime
 * 返回: 无
 * 说明: 无
 ******************************************************************************/
void SCH_Delay_Task(sTaskTCB *task, uint32_t delaytime); 

/*******************************************************************************
 * 名称: SCH_Update
 * 功能: 任务调度时间更新
 * 形参: 无
 * 返回: 无
 * 说明: 需要放在定时器中断函数中
 ******************************************************************************/
void SCH_Update(void);


#endif

/************************ (C) COPYRIGHT HARRY007 *****END OF FILE**************/
